Invalid=False

#Make Invalid Function which checks if Invalid already then reutrn Invalid TRUE IF NOT THEN PERFORM EXTRA CHECKS AND RETURN TRUE OR FALSE

InstructionSetOpCode={
    "mov":"000000",
    "add":"000001",
    "sub":"000010",
    "inc":"000011",
    "dec":"000100",
    "mul":"000101",
    "div":"000110",
    "and":"000111",
    "or":"001000",
    "not":"001001"
    #ror store in Deue and Use built in Rotate
    #rol
    
    }
RegistersCode={
    "ax":"000",
    "al":"000",
    "ah":"100",
    "bx":"011",
    "bl":"011",
    "bh":"111",
    "cx":"001",
    "ch":"101",
    "cl":"001",
    "dx":"010",
    "dh":"110",
    "dl":"010",
    "sp":"100",
    "bp":"101",
    "si":"110",
    "di":"111"
    
    }

RegistersValue={
    "ax":["1","1","1","1"],
    "bx":["1","0","1","1"],
    "cx":["0","0","0","0"],
    "dx":["0","0","0","0"],
    "sp":["0","0","0","0"],
    "bp":["0","0","0","0"],
    "si":["0","0","0","0"],
    "di":["0","0","0","0"]
    }
MemoryValue={#Note: MOV FUNCTION CHANGES THESE VALUES BUT DOESNOT CHANGE IT IN CODE AS SHOWN BELOW
    "[0h]":"00h",
    "[1h]":"00h",
    "[2h]":"00h",
    "[3h]":"00h",
    "[4h]":"00h",
    "[5h]":"00h",
    "[6h]":"00h",
    "[7h]":"00h",
    "[8h]":"00h",
    "[9h]":"00h",
    "[ah]":"00h",
    "[bh]":"00h",
    "[ch]":"00h",
    "[dh]":"00h",
    "[eh]":"00h",
    "[fh]":"00h"
    }
MemoryCode={
    "[0h]":"0000 0000 0000 0000 0000",
    "[1h]":"0000 0000 0000 0000 0001",
    "[2h]":"0000 0000 0000 0000 0010",
    "[3h]":"0000 0000 0000 0000 0011",
    "[4h]":"0000 0000 0000 0000 0100",
    "[5h]":"0000 0000 0000 0000 0101",
    "[6h]":"0000 0000 0000 0000 0110",
    "[7h]":"0000 0000 0000 0000 0111",
    "[8h]":"0000 0000 0000 0000 1000",
    "[9h]":"0000 0000 0000 0000 1001",
    "[ah]":"0000 0000 0000 0000 1010",
    "[bh]":"0000 0000 0000 0000 1011",
    "[ch]":"0000 0000 0000 0000 1100",
    "[dh]":"0000 0000 0000 0000 1101",
    "[eh]":"0000 0000 0000 0000 1110",
    "[fh]":"0000 0000 0000 0000 1111"
    }
def get_key(val):
    for key, value in RegistersCode.items():
        if val == value:
            return key
def get_mkey(val):
    for key, value in MemoryCode.items():
        if val == value:
            return key
Example="add ah,01h"
def OpCodeGenerator(Instruction):
    global InstructionSplit
    InstructionSplit=Instruction.lower().split(" ",1)
    global OpCode
    Code=InstructionSplit[0]
    OpCode=InstructionSetOpCode[Code]
    
    #print(InstructionSetOpCode[OpCode])
    
def OperandGenerator(InstructionSplit):
    global Operand2
    Operand2=""
   # print(InstructionSplit)
    OperandSplit=(InstructionSplit[1]).split(",",1)
    #print(OperandSplit)
    global Operand1
    
    if (len(OperandSplit)==1):
        
        Operand1=OperandSplit[0]
     #   print(Operand1)
    elif (len(OperandSplit)==2):
        Operand1=OperandSplit[0]
        Operand2=OperandSplit[1]
        
        print(Operand1)
        print(Operand2)
def MemoryComponentBool():
    global ImmediateValue
    ImmediateValue=""
    global Direct
    Direct=False
    global Immediate
    Immediate=False
    global RegisterDirect
    RegisterDirect=False
    global RegisterIndirect
    RegisterIndirect=False
    global RegisterRelativeOperand1
    RegisterRelativeOperand1=False
    global RegisterRelativeOperand2
    RegisterRelativeOperand2=False
    if (Operand1 in RegistersCode and Operand2 in RegistersCode):
        RegisterDirect=True
        print(1)
        return
    if (Operand2[0]!="[" and Operand2 not in RegistersCode):
        Immediate=True
        
        ImmediateValue=Operand2
        print(2)
    if (Operand1[0]=="[" and Operand2[0]=="["):
        global Error
        Error=True
        print(3)
        return
    if (Operand1[0]=='['):
        #Memory
        if (Operand1 in MemoryCode):
            Direct=True
            print(4)
        elif (Operand1.split("[",1)[1].split(']',1)[0] in RegistersCode):
            RegisterIndirect=True
            print(5)
        elif ("+" in Operand1):
            RegisterRelativeOperand1=True
            print(6)
    elif (Operand2[0]=='['):
        if (Operand2 in MemoryCode):
            Direct=True
            print(7)
        elif (Operand2.split("[",1)[1].split(']',1)[0] in RegistersCode):
            RegisterDirect=True
            print(8)
        elif ("+" in Operand2):
            RegisterRelativeOperand2=True
            print(9)
   
    
def ModGenerator():
    global MOD
    if (Immediate and Operand1 in RegistersCode):
        MOD="11"
        return
    if (RegisterDirect):
        MOD="11"
        return
    if (RegisterRelativeOperand1 or RegisterRelativeOperand2):
        MOD="01"
    elif (Operand1[0]=="[" or Operand2[0]=="["):
        MOD="00"
    else:
        MOD="-11"
def DGenerator():
    global D
    if (Immediate):
        D="0"
        return
    if (Operand2 in RegistersCode and (Operand1[0]=="[" or Operand1 in RegistersCode)):
        D="0"
    elif (Operand1 in RegistersCode and (Operand2[0]=="[" or Operand2 in RegistersCode)):
        D="1"
    else:
        D="-1"
    
def WGenerator():
    global W

    if(Operand2 in ["al","ah","bl","bh","cl","ch","dl","dh"]):
        W="0"
    elif(Operand2 in ["ax","bx","cx","dx"]):
        W="1"
    elif(Operand2 in MemoryCode ):
        W="0"
    elif(RegisterRelativeOperand2):
        W="0"
    elif(Immediate):
        if(len(ImmediateValue)==3 ):
            W="0"
        elif(len(ImmediateValue)==5):
            W="1"
        else:
            W="-1"
    else:
       # Error=True
        W="-1"
def RegGenerator():
    global REG
    global R_M
    global Displacement
    REG=-111
    R_M=-111
    Displacement=""
    if (D=="1"):
        if (MOD=="11"): 
            REG=RegistersCode[Operand1]
            R_M=RegistersCode[Operand2]
        elif (MOD=="01"):
             Displacement=Operand2[4:6]
             REG=RegistersCode[Operand1]
             R_M="111" 
            
        elif (MOD=="00"):
            REG=RegistersCode[Operand1]
            if(Operand2 in MemoryCode):
                R_M="110" #Refer to Sir tABLE IN SLIDES
            elif (Operand2 in RegistersCode):
                R_M="111"
       
            
    elif(D=='0'):
        if (MOD=="11"):
            R_M=RegistersCode[Operand1]
            if(not Immediate):
                REG=RegistersCode[Operand2]
            else:
                REG="000"
        elif (MOD=="01"):
             
             Displacement=Operand1[4:6]
             R_M="111"
             if(not Immediate):
                 REG=RegistersCode[Operand2]
             else:
                 REG="000"
        elif (MOD=="00"):
            if(Operand1 in MemoryCode):
                R_M="110"
            elif(Operand1 in RegistersCode):
                R_M="111"
            if(not Immediate):
                REG=RegistersCode[Operand2]
            else:
                REG="000"
    
def MachineCodeGenerator(Instruction):
    global MachineCode
    global Operand
    OpCodeGenerator(Instruction)
    OperandGenerator(InstructionSplit)
    if (Operand2!=""):
        MemoryComponentBool()
        DGenerator()
        ModGenerator()
        WGenerator()
        RegGenerator()
        Mismatch()
        MachineCode=OpCode+" "+D+" "+W+" "+MOD+" "+REG+" "+R_M+" "+ImmediateValue+" "+Displacement
    else:
        if (Operand1 in RegistersCode):
            Operand=RegistersCode[Operand1]
            
        elif (Operand1 in MemoryCode):
            Operand=110
        elif (Operand1[1:3] in RegistersCode):
            Operand=111
        MachineCode=OpCode+" "+"x"+" "+"x"+" "+"x"+" "+Operand
        # SET Unnecessary Bits to 0 for Unary Operators
def Mismatch():
    if (Operand2 in ["ax","bx","cx","dx"] and Operand1 in ["al","ah","bl","bh","cl","ch","dl","dh"]):
        global Invalid
        Invalid=True
    else:
        Invalid=False
    return Invalid
    #DisplacementCHECK

def MOV():
    if(D=='0'):
      if(MOD=="11"):
         if(not Immediate):
              if(W=="1"):
                  RegistersValue[get_key(R_M)]=RegistersValue[get_key(REG)]
              elif(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                      if(get_key(R_M) in ["al","bl","cl","dl"]):
                          RegistersValue[get_key(R_M)][3]=RegistersValue[get_key(REG)][3]
                          RegistersValue[get_key(R_M)][2]=RegistersValue[get_key(REG)][2]
                          
                  
                      elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=RegistersValue[get_key(REG)][3]
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=RegistersValue[get_key(REG)][2]
                          
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       if(get_key(R_M) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(R_M)][3]=RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]
                           RegistersValue[get_key(R_M)][2]=RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]
                   
                       elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]  
         else:
             if(W=="1"):
                 for i in range(4):
                     RegistersValue[get_key(R_M)][i]=ImmediateValue[i]
             elif(W=="0"):
                 if(get_key(R_M) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(R_M)][3]=ImmediateValue[1]
                     RegistersValue[get_key(R_M)][2]=ImmediateValue[0]
                 elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=ImmediateValue[1]
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=ImmediateValue[0] 
                 else:
                    for i in range(2):
                        RegistersValue[get_key(R_M)][i+2]=ImmediateValue[i]
                    
      elif(MOD=="00"):
        if(R_M=="110"):#Direct
          if(not Immediate):#
            if(W=="0"):
               if(get_key(REG) in ["al","bl","cl","dl"]):
                  MemoryValue[Operand1]=RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3]+'h'
               elif(get_key(REG) in ["ah","bh","ch","dh"]):
                  MemoryValue[Operand1]=RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]+RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]+'h'
            elif(W=="1"):
                  
                  MemoryValue[Operand1]=RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3]+'h'
                  MemoryValue[hex(int(Operand1[1],16)+1)+'h']=RegistersValue[get_key(REG)][0]+RegistersValue[get_key(REG)][1]+'h'
          else:#
             if(W=="0"):
                 MemoryValue[Operand1]=Operand2
             elif(W=="1"):
                 MemoryValue[Operand1]=Operand2[2]+Operand2[3]+'h'
                 MemoryValue[hex(int(Operand1[1],16)+1)+'h']=Operand2[0]+Operand2[1]+'h'#
                 
                 
                 
                 
        elif(R_M=="111"):#rEGISTERiNDIRECT
         if(not Immediate):#
            if(W=="0"):
                if(get_key(REG) in ["al","bl","cl","dl"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3])+'h'
                elif(get_key(REG) in ["ah","bh","ch","dh"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1])+'h'
            elif(W=="1"):
                  
                  MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3])+'h'
                  MemoryValue[hex(int("".join(RegistersValue[Operand1]),16)+1)+'h']=str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1])+'h'    
         else:#
            if(W=="0"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=Operand2
            elif(W=="1"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=Operand2[2]+Operand2[3]+'h'
                MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)[2:]+'h']=Operand2[0]+Operand2[1]+'h'
                #
      elif(MOD=="01"): #Register Relative
        if(not Immediate):#
            if(R_M=="111"):
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))[2:]+'h']=str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3])+'h'
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))[2:]+'h']=str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1])+'h'
                elif(W=="1"):
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))[2:]+'h']=str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3])+'h'
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))[2:]+'h']=str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1])+'h'  
        else:#
           if(W=="0"):
               MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))[2:]+'h']=Operand2
           elif(W=="1"):
               MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))[2:]+'h']=Operand2[2]+Operand2[3]+'h'
               MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))[2:]+'h']=Operand2[0]+Operand2[1]+'h'
               #
            
    elif(D=="1"):
        if(MOD=="11"):
                if(W=='1'):
                    RegistersValue[get_key(REG)]=RegistersValue[get_key(R_M)]
                elif(W=='0'):
                    if(get_key(R_M) in ["al","bl","cl","dl"]):
                        if(get_key(REG) in ["al","bl","cl","dl"]):
                            RegistersValue[get_key(REG)][3]=RegistersValue[get_key(R_M)][3]
                            RegistersValue[get_key(REG)][2]=RegistersValue[get_key(R_M)][2]
                    
                        elif(get_key(REG) in ["ah","bh","ch","dh"]):
                            RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=RegistersValue[get_key(R_M)][3]
                            RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=RegistersValue[get_key(R_M)][2]
                    elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                         if(get_key(REG) in ["al","bl","cl","dl"]):
                             RegistersValue[get_key(REG)][3]=RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]
                             RegistersValue[get_key(REG)][2]=RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]
                     
                         elif(get_key(REG) in ["ah","bh","ch","dh"]):
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0] 
        elif(MOD=="00"):
          if(R_M=="110"):#Direct
              if(W=="0"):
                 if(get_key(REG) in ["al","bl","cl","dl"]):
                    RegistersValue[get_key(REG)][2]=MemoryValue[Operand2][0]
                    RegistersValue[get_key(REG)][3]=MemoryValue[Operand2][1]
                 elif(get_key(REG) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=MemoryValue[Operand2][0]
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=MemoryValue[Operand2][1]
                 else:
                     RegistersValue[get_key(REG)][2]=MemoryValue[Operand2][0]
                     RegistersValue[get_key(REG)][3]=MemoryValue[Operand2][1]
          elif(R_M=="111"):#Register Indirect
              if(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(REG)][2]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0]
                     RegistersValue[get_key(REG)][3]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0]
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1]
                  else:
                      RegistersValue[get_key(REG)][2]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0]
                      RegistersValue[get_key(REG)][3]=MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1]
        elif(MOD=="01"):
            if(R_M=="111"):#Register Indirect
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       RegistersValue[get_key(REG)][2]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0]
                       RegistersValue[get_key(REG)][3]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1]
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0]
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1]
                    else:
                        RegistersValue[get_key(REG)][2]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0]
                        RegistersValue[get_key(REG)][3]=MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1]
            
#def Execute():


    #appply invalid and mismatch check here
        



def ADD():
    if(D=='0'):
      if(MOD=="11"):
         if(not Immediate):
              if(W=='1'):
                  RegistersValue[get_key(R_M)]=list(hex(int("".join(RegistersValue[get_key(R_M)]),16)+int("".join(RegistersValue[get_key(REG)]),16))[2:])
              elif(W=='0'):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                      if(get_key(R_M) in ["al","bl","cl","dl"]):
                          RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)+int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)+int(RegistersValue[get_key(REG)][2],16))[2:]
                  
                      elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)+int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)+int(RegistersValue[get_key(REG)][2],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       if(get_key(R_M) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)+int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)+int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
                   
                       elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(R_M)][1],16)+int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(R_M)][0],16)+int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
         else:
             if(W=="1"):
                 for i in range(4):
                     RegistersValue[get_key(R_M)][i]=hex(int(RegistersValue[get_key(R_M)][i],16)+int(ImmediateValue[i],16))[2:]
             elif(W=="0"):
                 if(get_key(R_M) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)+int(ImmediateValue[1],16))[2:]
                     RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)+int(ImmediateValue[0],16))[2:]
                 elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)+int(ImmediateValue[1],16))[2:]
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)+int(ImmediateValue[0],16))[2:]
                 else:
                    for i in range(2):
                        RegistersValue[get_key(R_M)][i+2]=hex(int(RegistersValue[get_key(R_M)][i+2],16)+int(ImmediateValue[i],16))[2:]
                    
      elif(MOD=="00"):
        if(R_M=="110"):#Direct
         if(not Immediate):
            if(W=="0"):
               if(get_key(REG) in ["al","bl","cl","dl"]):#
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)+int(RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3],16))[2:]+'h'
               elif(get_key(REG) in ["ah","bh","ch","dh"]):
                  MemoryValue[Operand1]=int(MemoryValue[Operand1],16)+int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]+RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)[2:]+'h'
            elif(W=="1"):
                  print("Invalid")
                  
         else:
                if(W=="0"):
                    MemoryValue[Operand1]= hex(int(MemoryValue[Operand1][:2],16)+int(Operand2[:2],16))[2:]+'h'
                elif(W=="1"):
                    print("Invalid")
        elif(R_M=="111"):#rEGISTERiNDIRECT
         if(not Immediate):
            if(W=="0"):
                if(get_key(REG) in ["al","bl","cl","dl"]):############################################################
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)+int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                elif(get_key(REG) in ["ah","bh","ch","dh"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)+int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
            elif(W=="1"):
                  
                  MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)+int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                  MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h'],16)+int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'    
         else:#
            if(W=="0"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)+int(Operand2[:2],16))[2:]+'h'
            elif(W=="1"):
                print("Invalid")
      elif(MOD=="01"): #Register Relative
       if(not Immediate):
            if(R_M=="111"):
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int( MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'])+int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)+int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
                elif(W=="1"):
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)+int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h'],16)+int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'  
       
       else:#
             if(W=="0"):
                 MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'][:2],16)+int(Operand2[:2],16))[2:]+'h'
             elif(W=="1"):
                 print("Invalid")
          #            
    elif(D=="1"):
        if(MOD=="11"):
                if(W=='1'):
                    RegistersValue[get_key(REG)]=list(hex(int("".join(RegistersValue[get_key(REG)]),16)+int("".join(RegistersValue[get_key(R_M)]),16))[2:])
                elif(W=='0'):
                    if(get_key(R_M) in ["al","bl","cl","dl"]):
                        if(get_key(REG) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(RegistersValue[get_key(R_M)][2],16))[2:]
                    
                        elif(get_key(REG) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)+int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)+int(RegistersValue[get_key(R_M)][2],16))[2:]
                    elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                         if(get_key(REG) in ["al","bl","cl","dl"]):
                             RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
                     
                         elif(get_key(REG) in ["ah","bh","ch","dh"]):
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(REG)][1],16)+int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(REG)][0],16)+int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
        elif(MOD=="00"):
          if(R_M=="110"):#Direct
              if(W=="0"):
                 if(get_key(REG) in ["al","bl","cl","dl"]):
                    RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue[Operand2][1],16))[2:]
                 elif(get_key(REG) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)+int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)+int(MemoryValue[Operand2][1],16))[2:]
                 else:
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue[Operand2][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue[Operand2][1],16))[2:]
          elif(R_M=="111"):#Register Indirect
              if(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  else:
                      RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                      RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
        elif(MOD=="01"):
            if(R_M=="111"):#Register Indirect
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    else:
                        RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                        RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)+int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
            


def MUL():
    if(D=='0'):
      if(MOD=="11"):
         if(not Immediate):
              if(W=='1'):
                  RegistersValue[get_key(R_M)]=list(hex(int("".join(RegistersValue[get_key(R_M)]),16)*int("".join(RegistersValue[get_key(REG)]),16))[2:])
              elif(W=='0'):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                      if(get_key(R_M) in ["al","bl","cl","dl"]):
                          RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)*int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)*int(RegistersValue[get_key(REG)][2],16))[2:]
                  
                      elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)*int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)*int(RegistersValue[get_key(REG)][2],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       if(get_key(R_M) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)*int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)*int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
                   
                       elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(R_M)][1],16)*int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(R_M)][0],16)*int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
         else:
             if(W=="1"):
                 for i in range(4):
                     RegistersValue[get_key(R_M)][i]=hex(int(RegistersValue[get_key(R_M)][i],16)*int(ImmediateValue[i],16))[2:]
             elif(W=="0"):
                 if(get_key(R_M) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)*int(ImmediateValue[1],16))[2:]
                     RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)*int(ImmediateValue[0],16))[2:]
                 elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)*int(ImmediateValue[1],16))[2:]
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)*int(ImmediateValue[0],16))[2:]
                 else:
                    for i in range(2):
                        RegistersValue[get_key(R_M)][i+2]=hex(int(RegistersValue[get_key(R_M)][i+2],16)*int(ImmediateValue[i],16))[2:]
                    
      elif(MOD=="00"):
        if(R_M=="110"):#Direct
         if(not Immediate):
            if(W=="0"):
               if(get_key(REG) in ["al","bl","cl","dl"]):#
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)*int(RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3],16))[2:]+'h'
               elif(get_key(REG) in ["ah","bh","ch","dh"]):
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)*int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]+RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]+'h'
            elif(W=="1"):
                  print("Invalid")
                  
         else:
                if(W=="0"):
                    MemoryValue[Operand1]= hex(int(MemoryValue[Operand1][:2],16)*int(Operand2[:2],16))[2:]+'h'
                elif(W=="1"):
                    print("Invalid")
        elif(R_M=="111"):#rEGISTERiNDIRECT
         if(not Immediate):
            if(W=="0"):
                if(get_key(REG) in ["al","bl","cl","dl"]):############################################################
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)*int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                elif(get_key(REG) in ["ah","bh","ch","dh"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)*int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
            elif(W=="1"):
                  
                  MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)*int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                  MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h'],16)*int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'    
         else:#
            if(W=="0"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)*int(Operand2[:2],16))[2:]+'h'
            elif(W=="1"):
                print("Invalid")
      elif(MOD=="01"): #Register Relative
       if(not Immediate):
            if(R_M=="111"):
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int( MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'])*int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)*int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
                elif(W=="1"):
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)*int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h'],16)*int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'  
       
       else:#
             if(W=="0"):
                 MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'][:2],16)*int(Operand2[:2],16))[2:]+'h'
             elif(W=="1"):
                 print("Invalid")
          #            
    elif(D=="1"):
        if(MOD=="11"):
                if(W=='1'):
                    RegistersValue[get_key(REG)]=list(hex(int("".join(RegistersValue[get_key(REG)]),16)*int("".join(RegistersValue[get_key(R_M)]),16))[2:])
                elif(W=='0'):
                    if(get_key(R_M) in ["al","bl","cl","dl"]):
                        if(get_key(REG) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(RegistersValue[get_key(R_M)][2],16))[2:]
                    
                        elif(get_key(REG) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)*int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)*int(RegistersValue[get_key(R_M)][2],16))[2:]
                    elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                         if(get_key(REG) in ["al","bl","cl","dl"]):
                             RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
                     
                         elif(get_key(REG) in ["ah","bh","ch","dh"]):
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(REG)][1],16)*int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(REG)][0],16)*int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
        elif(MOD=="00"):
          if(R_M=="110"):#Direct
              if(W=="0"):
                 if(get_key(REG) in ["al","bl","cl","dl"]):
                    RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue[Operand2][1],16))[2:]
                 elif(get_key(REG) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)*int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)*int(MemoryValue[Operand2][1],16))[2:]
                 else:
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue[Operand2][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue[Operand2][1],16))[2:]
          elif(R_M=="111"):#Register Indirect
              if(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  else:
                      RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                      RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
        elif(MOD=="01"):
            if(R_M=="111"):#Register Indirect
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    else:
                        RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                        RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)*int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
            

def DIV():
    if(D=='0'):
      if(MOD=="11"):
         if(not Immediate):
              if(W=='1'):
                  RegistersValue[get_key(R_M)]=list(hex(int("".join(RegistersValue[get_key(R_M)]),16)/int("".join(RegistersValue[get_key(REG)]),16))[2:])
              elif(W=='0'):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                      if(get_key(R_M) in ["al","bl","cl","dl"]):
                          RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)/int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)/int(RegistersValue[get_key(REG)][2],16))[2:]
                  
                      elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)/int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)/int(RegistersValue[get_key(REG)][2],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       if(get_key(R_M) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)/int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)/int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
                   
                       elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(R_M)][1],16)/int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(R_M)][0],16)/int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
         else:
             if(W=="1"):
                 for i in range(4):
                     RegistersValue[get_key(R_M)][i]=hex(int(RegistersValue[get_key(R_M)][i],16)/int(ImmediateValue[i],16))[2:]
             elif(W=="0"):
                 if(get_key(R_M) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)/int(ImmediateValue[1],16))[2:]
                     RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)/int(ImmediateValue[0],16))[2:]
                 elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)/int(ImmediateValue[1],16))[2:]
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)/int(ImmediateValue[0],16))[2:]
                 else:
                    for i in range(2):
                        RegistersValue[get_key(R_M)][i+2]=hex(int(RegistersValue[get_key(R_M)][i+2],16)/int(ImmediateValue[i],16))[2:]
                    
      elif(MOD=="00"):
        if(R_M=="110"):#Direct
         if(not Immediate):
            if(W=="0"):
               if(get_key(REG) in ["al","bl","cl","dl"]):#
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)/int(RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3],16))[2:]+'h'
               elif(get_key(REG) in ["ah","bh","ch","dh"]):
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)/int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]+RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]+'h'
            elif(W=="1"):
                  print("Invalid")
                  
         else:
                if(W=="0"):
                    MemoryValue[Operand1]= hex(int(MemoryValue[Operand1][:2],16)/int(Operand2[:2],16))[2:]+'h'
                elif(W=="1"):
                    print("Invalid")
        elif(R_M=="111"):#rEGISTERiNDIRECT
         if(not Immediate):
            if(W=="0"):
                if(get_key(REG) in ["al","bl","cl","dl"]):############################################################
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)/int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                elif(get_key(REG) in ["ah","bh","ch","dh"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)/int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
            elif(W=="1"):
                  
                  MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)/int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                  MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h'],16)/int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'    
         else:#
            if(W=="0"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)/int(Operand2[:2],16))[2:]+'h'
            elif(W=="1"):
                print("Invalid")
      elif(MOD=="01"): #Register Relative
       if(not Immediate):
            if(R_M=="111"):
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int( MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'])/int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)/int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
                elif(W=="1"):
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)/int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h'],16)/int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'  
       
       else:#
             if(W=="0"):
                 MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'][:2],16)/int(Operand2[:2],16))[2:]+'h'
             elif(W=="1"):
                 print("Invalid")
          #            
    elif(D=="1"):
        if(MOD=="11"):
                if(W=='1'):
                    RegistersValue[get_key(REG)]=list(hex(int("".join(RegistersValue[get_key(REG)]),16)/int("".join(RegistersValue[get_key(R_M)]),16))[2:])
                elif(W=='0'):
                    if(get_key(R_M) in ["al","bl","cl","dl"]):
                        if(get_key(REG) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(RegistersValue[get_key(R_M)][2],16))[2:]
                    
                        elif(get_key(REG) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)/int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)/int(RegistersValue[get_key(R_M)][2],16))[2:]
                    elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                         if(get_key(REG) in ["al","bl","cl","dl"]):
                             RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
                     
                         elif(get_key(REG) in ["ah","bh","ch","dh"]):
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(REG)][1],16)/int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(REG)][0],16)/int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
        elif(MOD=="00"):
          if(R_M=="110"):#Direct
              if(W=="0"):
                 if(get_key(REG) in ["al","bl","cl","dl"]):
                    RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue[Operand2][1],16))[2:]
                 elif(get_key(REG) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)/int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)/int(MemoryValue[Operand2][1],16))[2:]
                 else:
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue[Operand2][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue[Operand2][1],16))[2:]
          elif(R_M=="111"):#Register Indirect
              if(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  else:
                      RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                      RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
        elif(MOD=="01"):
            if(R_M=="111"):#Register Indirect
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    else:
                        RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                        RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)/int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
            

def SUB():
    if(D=='0'):
      if(MOD=="11"):
         if(not Immediate):
              if(W=='1'):
                  RegistersValue[get_key(R_M)]=list(hex(int("".join(RegistersValue[get_key(R_M)]),16)-int("".join(RegistersValue[get_key(REG)]),16))[2:])
              elif(W=='0'):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                      if(get_key(R_M) in ["al","bl","cl","dl"]):
                          RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)-int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)-int(RegistersValue[get_key(REG)][2],16))[2:]
                  
                      elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)-int(RegistersValue[get_key(REG)][3],16))[2:]
                          RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)-int(RegistersValue[get_key(REG)][2],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       if(get_key(R_M) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)-int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)-int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
                   
                       elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(R_M)][1],16)-int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]
                           RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(R_M)][0],16)-int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16))[2:]
         else:
             if(W=="1"):
                 for i in range(4):
                     RegistersValue[get_key(R_M)][i]=hex(int(RegistersValue[get_key(R_M)][i],16)-int(ImmediateValue[i],16))[2:]
             elif(W=="0"):
                 if(get_key(R_M) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(R_M)][3]=hex(int(RegistersValue[get_key(R_M)][3],16)-int(ImmediateValue[1],16))[2:]
                     RegistersValue[get_key(R_M)][2]=hex(int(RegistersValue[get_key(R_M)][2],16)-int(ImmediateValue[0],16))[2:]
                 elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16)-int(ImmediateValue[1],16))[2:]
                    RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16)-int(ImmediateValue[0],16))[2:]
                 else:
                    for i in range(2):
                        RegistersValue[get_key(R_M)][i+2]=hex(int(RegistersValue[get_key(R_M)][i+2],16)-int(ImmediateValue[i],16))[2:]
                    
      elif(MOD=="00"):
        if(R_M=="110"):#Direct
         if(not Immediate):
            if(W=="0"):
               if(get_key(REG) in ["al","bl","cl","dl"]):#
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)-int(RegistersValue[get_key(REG)][2]+RegistersValue[get_key(REG)][3],16))[2:]+'h'
               elif(get_key(REG) in ["ah","bh","ch","dh"]):
                  MemoryValue[Operand1]=hex(int(MemoryValue[Operand1],16)-int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]+RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16))[2:]+'h'
            elif(W=="1"):
                  print("Invalid")
                  
         else:
                if(W=="0"):
                    MemoryValue[Operand1]= hex(int(MemoryValue[Operand1][:2],16)-int(Operand2[:2],16))[2:]+'h'
                elif(W=="1"):
                    print("Invalid")
        elif(R_M=="111"):#rEGISTERiNDIRECT
         if(not Immediate):
            if(W=="0"):
                if(get_key(REG) in ["al","bl","cl","dl"]):############################################################
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)-int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                elif(get_key(REG) in ["ah","bh","ch","dh"]):
                   MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)-int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
            elif(W=="1"):
                  
                  MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)-int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                  MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1])[2:],16)+1)+'h'],16)-int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'    
         else:#
            if(W=="0"):
                MemoryValue["".join(RegistersValue[Operand1])[2:]+'h']=hex(int(MemoryValue["".join(RegistersValue[Operand1])[2:]+'h'],16)-int(Operand2[:2],16))[2:]+'h'
            elif(W=="1"):
                print("Invalid")
      elif(MOD=="01"): #Register Relative
       if(not Immediate):
            if(R_M=="111"):
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int( MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'])-int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)-int(str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0])+str(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]),16))[2:]+'h'
                elif(W=="1"):
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'],16)-int(str(RegistersValue[get_key(REG)][2])+str(RegistersValue[get_key(REG)][3]),16))[2:]+'h'
                      MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+1+int(Displacement[0],16))+'h'],16)-int(str(RegistersValue[get_key(REG)][0])+str(RegistersValue[get_key(REG)][1]),16))[2:]+'h'  
       
       else:#
             if(W=="0"):
                 MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h']=hex(int(MemoryValue[hex(int("".join(RegistersValue[Operand1[1:3]])[2:],16)+int(Displacement[0],16))+'h'][:2],16)-int(Operand2[:2],16))[2:]+'h'
             elif(W=="1"):
                 print("Invalid")
          #            
    elif(D=="1"):
        if(MOD=="11"):
                if(W=='1'):
                    RegistersValue[get_key(REG)]=list(hex(int("".join(RegistersValue[get_key(REG)]),16)-int("".join(RegistersValue[get_key(R_M)]),16))[2:])
                elif(W=='0'):
                    if(get_key(R_M) in ["al","bl","cl","dl"]):
                        if(get_key(REG) in ["al","bl","cl","dl"]):
                           RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(RegistersValue[get_key(R_M)][2],16))[2:]
                    
                        elif(get_key(REG) in ["ah","bh","ch","dh"]):
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)-int(RegistersValue[get_key(R_M)][3],16))[2:]
                           RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)-int(RegistersValue[get_key(R_M)][2],16))[2:]
                    elif(get_key(R_M) in ["ah","bh","ch","dh"]):
                         if(get_key(REG) in ["al","bl","cl","dl"]):
                             RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
                     
                         elif(get_key(REG) in ["ah","bh","ch","dh"]):
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(REG)][1],16)-int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][1],16))[2:]
                             RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(REG)][0],16)-int(RegistersValue[get_key(str(int(R_M)-100).zfill(3))][0],16))[2:]
        elif(MOD=="00"):
          if(R_M=="110"):#Direct
              if(W=="0"):
                 if(get_key(REG) in ["al","bl","cl","dl"]):
                    RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue[Operand2][1],16))[2:]
                 elif(get_key(REG) in ["ah","bh","ch","dh"]):
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)-int(MemoryValue[Operand2][0],16))[2:]
                    RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)-int(MemoryValue[Operand2][1],16))[2:]
                 else:
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue[Operand2][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue[Operand2][1],16))[2:]
          elif(R_M=="111"):#Register Indirect
              if(W=="0"):
                  if(get_key(REG) in ["al","bl","cl","dl"]):
                     RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  elif(get_key(REG) in ["ah","bh","ch","dh"]):
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                     RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
                  else:
                      RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][0],16))[2:]
                      RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue["".join(RegistersValue[Operand2])[2:]+'h'][1],16))[2:]
        elif(MOD=="01"):
            if(R_M=="111"):#Register Indirect
                if(W=="0"):
                    if(get_key(REG) in ["al","bl","cl","dl"]):
                       RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    elif(get_key(REG) in ["ah","bh","ch","dh"]):
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][0]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][0],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                       RegistersValue[get_key(str(int(REG)-100).zfill(3))][1]=hex(int(RegistersValue[get_key(str(int(REG)-100).zfill(3))][1],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
                    else:
                        RegistersValue[get_key(REG)][2]=hex(int(RegistersValue[get_key(REG)][2],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][0],16))[2:]
                        RegistersValue[get_key(REG)][3]=hex(int(RegistersValue[get_key(REG)][3],16)-int(MemoryValue["".join(RegistersValue[Operand2[1:3]])[2:]+'h'][1],16))[2:]
            
def INC():
    Example="add "+get_key(Operand)+",01h"
    MachineCodeGenerator(Example)
    ADD()
def DEC():
    Example="sub "+get_key(Operand)+",01h"
    MachineCodeGenerator(Example)
    SUB()
   
def AND():
    if (Operand1 in RegistersCode and Operand2 in RegistersCode):
        RegistersValue[Operand1]=list(hex(int("".join(RegistersValue[Operand1]),16) & int("".join(RegistersValue[Operand2]),16))[2:].zfill(4))
def OR():
    if (Operand1 in RegistersCode and Operand2 in RegistersCode):
        RegistersValue[Operand1]=list(hex(int("".join(RegistersValue[Operand1]),16)|int("".join(RegistersValue[Operand2]),16))[2:].zfill(4))    
def XOR():
    if (Operand1 in RegistersCode and Operand2 in RegistersCode):
        RegistersValue[Operand1]=list(hex(int("".join(RegistersValue[Operand1]),16) ^ int("".join(RegistersValue[Operand2]),16))[2:].zfill(4))
def RSHIFT():
    RegistersValue[Operand]=list(hex(int(RegistersValue[Operand],16)<<1)[2:])
MachineCodeGenerator(Example)
































